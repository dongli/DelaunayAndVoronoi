# Compute the root directory
# Note:
#   The upper directory which contains "Makefile.basic" is the root directory.
ROOT_DIR = $(shell while [ ! -f Makefile.basic ]; do cd ..; done; pwd)

# Set the source code directories
VPATH = $(ROOT_DIR)/Core:$(ROOT_DIR)/Util

# Fortran compiler options
FC = ifort
ifeq ($(FC), ifort)
FFLAGS = -fp-model precise -fp-speculation=safe
ifeq ($(DEBUG), yes)
FFLAGS += -O0 -g -check bounds -traceback
endif
OPTION += -DFC_IFORT
endif
ifeq ($(FC), gfortran)
FFLAGS =
ifeq ($(DEBUG), yes)
FFLAGS += -O0 -g
endif
OPTION += -DFC_GFORTRAN
endif

# External libraries
NETCDF_ROOT = $(strip $(subst /bin/ncdump, , $(shell which ncdump)))
NETCDF_INC = -I$(NETCDF_ROOT)/include
NETCDF_LIB = -L$(NETCDF_ROOT)/lib -lnetcdf

LIBRARY = $(NETCDF_INC) $(NETCDF_LIB)

# The rule for building dependencies (refer to "implicit rule")
%.o: %.F90
	@echo " Creating dependency" $@
	@echo $(seperator)
	@$(FC) -c $< $(OPTION) $(FFLAGS) $(NETCDF_INC)

# the rule for building targets (refer to "static pattern rule")
all: start $(TARGET) end

$(TARGET): %: $(addsuffix .F90, %) $(OBJECT)
	@echo " Creating target $@"
	@if [ "$(OPTION)" != "" ]; then \
             echo " Configurations:"; \
             echo "   $(OPTION)"; \
         fi
	@$(FC) -o $@ $(addsuffix .F90, $@) \
         $(OBJECT) $(OPTION) $(LIBRARY) $(FFLAGS) && \
         echo " ---> $@ is created"
	@echo $(seperator)

# some decorations
seperator       = "----------------------------------------------"

.PHONY: clean start end
clean:
	@if ls *.o > /dev/null 2>&1; then rm *.o; fi
	@if ls *.mod > /dev/null 2>&1; then rm *.mod; fi
	@if ls *.i90 > /dev/null 2>&1; then rm *.i90; fi
	@for target in $(TARGET); do if ls $$target > /dev/null 2>&1; then rm $$target; fi; done
	@echo " Project has been cleaned."

start:
	@echo $(seperator)
	@echo " $(PROJECT_NAME)"
	@echo $(seperator)

end:
	@echo " Finished"
	@echo $(seperator)
